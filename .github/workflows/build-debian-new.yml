name: Build Deb Package

on:
  push:
  workflow_dispatch:
  workflow_call:
    inputs:
      ref:
        description: 'Git ref to build from'
        default: ${{ github.ref }}
        required: true
        type: string

jobs:
  build-deb:
    name: Build Debian/Ubuntu Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          fetch-tags: true
          fetch-depth: 0

      - name: Install minimal dependencies
        run: |
          sudo apt update
          sudo apt install -y dpkg-dev

      - name: Build package
        run: ./tools/build_debs.sh

      - name: Determine version for artifact naming
        id: version
        run: |
          VERSION=$(grep -E '^\s*#define\s+TENSTORRENT_DRIVER_VERSION_MAJOR\s+' module.h | awk '{print $3}').$(grep -E '^\s*#define\s+TENSTORRENT_DRIVER_VERSION_MINOR\s+' module.h | awk '{print $3}').$(grep -E '^\s*#define\s+TENSTORRENT_DRIVER_VERSION_PATCH\s+' module.h | awk '{print $3}')$(grep -E '^\s*#define\s+TENSTORRENT_DRIVER_VERSION_SUFFIX\s+' module.h | sed -E 's/.*"(.*)".*/\1/')
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Version: ${VERSION}"

      - name: Upload Debian package
        uses: actions/upload-artifact@v4
        with:
          name: tenstorrent-dkms_${{ steps.version.outputs.version }}_all.deb
          path: tenstorrent-dkms_${{ steps.version.outputs.version }}_all.deb

      - name: Display package info
        run: |
          echo "=== Package Information ==="
          dpkg-deb --info tenstorrent-dkms_${{ steps.version.outputs.version }}_all.deb

